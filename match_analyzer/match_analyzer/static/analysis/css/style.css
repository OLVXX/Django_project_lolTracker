/* analysis/static/analysis/css/style.css */
:root {
  /* Light theme variables */
  --bg-primary-light: #ffffff;
  --bg-secondary-light: #f8f9fa;
  --text-primary-light: #2d3436;
  --text-secondary-light: #636e72;
  --accent-light: #6c5ce7;
  --card-bg-light: #ffffff;
  --victory-light: #00b894;
  --defeat-light: #ff7675;

  /* Dark theme variables */
  --bg-primary-dark: #1a1b1e;
  --bg-secondary-dark: #2d2d2d;
  --text-primary-dark: #e9ecef;
  --text-secondary-dark: #ced4da;
  --accent-dark: #a8a4ff;
  --card-bg-dark: #2d2d2d;
  --victory-dark: #00d68f;
  --defeat-dark: #ff6b6b;
}

/* Default light theme */
:root {
  --bg-primary: var(--bg-primary-light);
  --bg-secondary: var(--bg-secondary-light);
  --text-primary: var(--text-primary-light);
  --text-secondary: var(--text-secondary-light);
  --accent: var(--accent-light);
  --card-bg: var(--card-bg-light);
  --victory: var(--victory-light);
  --defeat: var(--defeat-light);
}

/* Dark theme */
[data-theme="dark"] {
  --bg-primary: var(--bg-primary-dark);
  --bg-secondary: var(--bg-secondary-dark);
  --text-primary: var(--text-primary-dark);
  --text-secondary: var(--text-secondary-dark);
  --accent: var(--accent-dark);
  --card-bg: var(--card-bg-dark);
  --victory: var(--victory-dark);
  --defeat: var(--defeat-dark);
}

body {
  font-family: "Inter", sans-serif;
  background: var(--bg-secondary);
  color: var(--text-primary);
  line-height: 1.6;
  margin: 0;
  padding: 20px;
  transition: background-color 0.3s, color 0.3s;
}

.container {
  max-width: 1000px;
  margin: 0 auto;
  padding: 20px;
}

/* Theme toggle button */
.theme-toggle {
  position: fixed;
  top: 20px;
  right: 20px;
  padding: 10px;
  border-radius: 50%;
  background: var(--accent);
  border: none;
  cursor: pointer;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

.summoner-info {
  background: linear-gradient(135deg, var(--accent), rgba(108, 92, 231, 0.8));
  border-radius: 16px;
  padding: 30px;
  margin-bottom: 30px;
  color: white;
  box-shadow: 0 4px 20px rgba(108, 92, 231, 0.2);
}

.match-card {
  background: var(--card-bg);
  border-radius: 16px;
  padding: 25px;
  margin-bottom: 20px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.match-card.victory {
  border-left: 4px solid var(--victory);
}

.match-card.defeat {
  border-left: 4px solid var(--defeat);
}

.match-header {
  display: grid;
  grid-template-columns: auto 1fr auto;
  gap: 20px;
  align-items: center;
  margin-bottom: 20px;
}

.champion-info {
  display: flex;
  align-items: center;
  gap: 15px;
}

.champion-icon {
  width: 60px;
  height: 60px;
  border-radius: 12px;
  border: 3px solid var(--accent);
}

.participant-stats {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 20px;
  padding-top: 20px;
  border-top: 1px solid var(--text-secondary);
}

.stat-group {
  text-align: center;
}

.kda {
  font-size: 1.2em;
  font-weight: 600;
  color: var(--accent);
  margin-bottom: 5px;
}

.game-info {
  text-align: right;
}

.game-mode {
  font-weight: 500;
  color: var(--text-secondary);
}

.game-result {
  font-weight: 600;
  color: var(--accent);
}

/* Responsive design */
@media (max-width: 768px) {
  .match-header {
    grid-template-columns: 1fr;
  }

  .game-info {
    text-align: left;
  }

  .participant-stats {
    grid-template-columns: 1fr;
  }
}
/* Add to style.css */

/* Form container styling */
.form-container {
  max-width: 480px;
  margin: 40px auto;
  padding: 40px;
  background: var(--card-bg);
  border-radius: 24px;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
  animation: slideUp 0.5s ease-out;
}

.form-container h1 {
  color: var(--accent);
  font-size: 2.5rem;
  margin-bottom: 1.5rem;
  font-weight: 600;
  text-align: center;
  background: linear-gradient(135deg, var(--accent), #a8a4ff);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.form-group {
  margin-bottom: 1.5rem;
}

.form-group label {
  display: block;
  margin-bottom: 0.5rem;
  color: var(--text-primary);
  font-weight: 500;
  font-size: 0.95rem;
}

.form-group input,
.form-group select {
  width: 100%;
  padding: 12px 16px;
  border: 2px solid var(--text-secondary);
  border-radius: 12px;
  background: var(--bg-primary);
  color: var(--text-primary);
  font-size: 1rem;
  transition: all 0.3s ease;
}

.form-group input:focus,
.form-group select:focus {
  outline: none;
  border-color: var(--accent);
  box-shadow: 0 0 0 3px rgba(108, 92, 231, 0.1);
}

.form-group small {
  display: block;
  margin-top: 0.5rem;
  color: var(--text-secondary);
  font-size: 0.85rem;
}

button[type="submit"] {
  width: 100%;
  padding: 14px 28px;
  background: linear-gradient(135deg, var(--accent), #a8a4ff);
  color: white;
  border: none;
  border-radius: 12px;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

button[type="submit"]:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(108, 92, 231, 0.2);
}

.error-message {
  padding: 16px;
  margin-bottom: 20px;
  background: #fff5f5;
  border-left: 4px solid #fc8181;
  color: #c53030;
  border-radius: 8px;
  font-size: 0.9rem;
  animation: shake 0.5s ease-in-out;
}

/* Animations */
@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-10px);
  }
  75% {
    transform: translateX(10px);
  }
}

/* Add floating labels */
.input-container {
  position: relative;
  margin-bottom: 20px;
}

.floating-label {
  position: absolute;
  left: 16px;
  top: 50%;
  transform: translateY(-50%);
  background: var(--bg-primary);
  padding: 0 8px;
  color: var(--text-secondary);
  transition: all 0.2s ease;
  pointer-events: none;
}

.form-group input:focus + .floating-label,
.form-group input:not(:placeholder-shown) + .floating-label {
  top: 0;
  transform: translateY(-50%) scale(0.85);
  color: var(--accent);
}

/* Background decoration */
.background-decoration {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(
      circle at 10% 20%,
      rgba(108, 92, 231, 0.1) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 90% 80%,
      rgba(168, 164, 255, 0.1) 0%,
      transparent 50%
    );
  pointer-events: none;
  z-index: -1;
}
/* Add to existing style.css */
.stats-overview {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
  margin-bottom: 30px;
}

.chart-container {
  background: var(--card-bg);
  border-radius: 16px;
  padding: 20px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.load-more-container {
  text-align: center;
  margin: 30px 0;
}

.button-primary {
  padding: 12px 24px;
  background: linear-gradient(135deg, var(--accent), #a8a4ff);
  color: white;
  border: none;
  border-radius: 12px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.button-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(108, 92, 231, 0.2);
}
/* Add to style.css */
.stats-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
  margin: 20px 0;
}

.chart-card {
  background: var(--card-bg);
  border-radius: 16px;
  padding: 20px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  z-index: 1000;
}

.modal-content {
  background: var(--card-bg);
  margin: 5% auto;
  padding: 20px;
  width: 90%;
  max-width: 1200px;
  border-radius: 16px;
  position: relative;
}

.theme-toggle {
  z-index: 1000;
}

.theme-toggle .sun-icon {
  display: none;
}

.theme-toggle .moon-icon {
  display: block;
}

[data-theme="dark"] .theme-toggle .sun-icon {
  display: block;
}

[data-theme="dark"] .theme-toggle .moon-icon {
  display: none;
}

.summoner-banner {
  width: 100%;
  height: 200px;
  background: linear-gradient(135deg, var(--accent), rgba(108, 92, 231, 0.8));
  border-radius: 16px;
  margin-bottom: 30px;
  display: flex;
  align-items: center;
  padding: 30px;
}
.summoner-banner {
  background: linear-gradient(135deg, var(--accent), rgba(108, 92, 231, 0.8));
  border-radius: 16px;
  margin-bottom: 30px;
  padding: 30px;
  box-shadow: 0 4px 20px rgba(108, 92, 231, 0.2);
}

.summoner-profile {
  display: flex;
  align-items: center;
  gap: 20px;
}

.profile-icon {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  border: 4px solid white;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  background: var(--bg-primary);
  object-fit: cover;
}

.summoner-info {
  color: white;
}

.summoner-info h2 {
  margin: 0 0 8px 0;
  font-size: 2rem;
}

.summoner-info p {
  margin: 4px 0;
  opacity: 0.9;
}
/* In style.css */
.stats-overview {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
  margin: 20px 0 30px;
  min-height: 300px; /* Add this */
}

.chart-container {
  background: var(--card-bg);
  border-radius: 16px;
  padding: 20px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  height: 300px; /* Fixed height */
  min-height: 300px; /* Add this */
  position: relative;
}

.chart-container canvas {
  width: 100% !important;
  height: 100% !important;
}
/* Add to your CSS */
.load-more-container {
  text-align: center;
  margin: 20px 0;
}

.load-more-button {
  background: var(--primary);
  color: white;
  border: none;
  padding: 12px 24px;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.load-more-button:hover {
  background: var(--secondary);
  transform: translateY(-2px);
}

.load-more-button:disabled {
  opacity: 0.7;
  cursor: not-allowed;
}

.loading-spinner {
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 2px solid rgba(255,255,255,0.3);
  border-radius: 50%;
  border-top-color: #fff;
  animation: spin 1s ease-in-out infinite;
  margin-right: 8px;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}